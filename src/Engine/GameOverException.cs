using System;
using System.Runtime.Serialization;

namespace Dgt.Minesweeper.Engine
{
    [Serializable]
    public class GameOverException : Exception
    {
        private const string DefaultMessage = "The Game is over and no further moves may be made.";
        
        #region Recommended constructors
        
        // I'm not sure if I want to keep these. This exception doesn't really make sense without the location, the
        // number of rows, and the number of columns. However, Microsoft best practices recommend having these, and
        // they are based off code that is generated by Visual Studio when generating a custom exception class.
        //
        // See https://docs.microsoft.com/en-us/dotnet/standard/exceptions/best-practices-for-exceptions
        // See https://docs.microsoft.com/en-us/dotnet/standard/exceptions/how-to-create-user-defined-exceptions

        public GameOverException()
            : this(DefaultMessage)
        {
        }

        public GameOverException(string message)
            : base(message)
        {
        }

        public GameOverException(string message, Exception innerException)
            : base(message, innerException)
        {
        }
        
        protected GameOverException(SerializationInfo info, StreamingContext context)
            : base(info, context)
        {
        }
        
        #endregion

        public GameOverException(bool isWon)
            : this(CreateMessage(isWon))
        {
        }

        private static string CreateMessage(bool isWon)
        {
            return $"{DefaultMessage}. The Game has already been {(isWon ? "won" : "lost")}.";
        }
    }
}